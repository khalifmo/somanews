{"version":3,"file":"app/api/stories/[storyId]/route.js","mappings":"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","sources":["webpack://_N_E/external commonjs \"node:async_hooks\"","webpack://_N_E/external commonjs \"node:buffer\"","webpack://_N_E/./src/app/api/stories/[storyId]/route.ts","webpack://_N_E/./src/app/api/stories/[storyId]/route.ts?7d33","webpack://_N_E/?b429","webpack://_N_E/","webpack://_N_E/?5b17"],"sourcesContent":["module.exports = require(\"node:async_hooks\");","module.exports = require(\"node:buffer\");","import { getRequestContext } from \"@cloudflare/next-on-pages\";\nimport { NextRequest, NextResponse } from \"next/server\";\nimport { D1Database } from \"@cloudflare/workers-types\";\n\n// Define the structure of an Article with source information\ninterface Article {\n  id: number;\n  title: string;\n  content_snippet: string | null;\n  url: string;\n  published_date: string | null;\n  fetched_date: string;\n  source_id: number;\n  source_name: string;\n  source_bias: string;\n}\n\nexport const runtime = \"edge\"; // Specify edge runtime\n\n// GET handler to fetch articles for a specific story\nexport async function GET(\n  request: NextRequest,\n  { params }: { params: { storyId: string } }\n) {\n  try {\n    const storyId = parseInt(params.storyId, 10);\n    \n    if (isNaN(storyId)) {\n      return NextResponse.json({ error: \"Invalid story ID\" }, { status: 400 });\n    }\n\n    // Access the D1 database binding\n    const context = getRequestContext();\n    const DB = context.env.DB as D1Database;\n\n    if (!DB) {\n      return NextResponse.json({ error: \"Database binding not found\" }, { status: 500 });\n    }\n\n    // First, get the story details\n    const storyQuery = `\n      SELECT id, representative_headline, summary, first_seen_date, last_updated_date, topic_tags\n      FROM stories\n      WHERE id = ?\n    `;\n    const storyResult = await DB.prepare(storyQuery).bind(storyId).first();\n\n    if (!storyResult) {\n      return NextResponse.json({ error: \"Story not found\" }, { status: 404 });\n    }\n\n    // Get all articles for this story with source information\n    const articlesQuery = `\n      SELECT \n        a.id, \n        a.title, \n        a.content_snippet, \n        a.url, \n        a.published_date, \n        a.fetched_date,\n        a.source_id,\n        s.name as source_name,\n        s.bias_classification as source_bias\n      FROM articles a\n      JOIN sources s ON a.source_id = s.id\n      WHERE a.story_id = ?\n      ORDER BY a.published_date DESC, a.fetched_date DESC\n    `;\n    \n    const articlesResult = await DB.prepare(articlesQuery).bind(storyId).all<Article>();\n\n    // Get bias distribution for this story\n    const biasQuery = `\n      SELECT bias_classification, article_count\n      FROM story_coverage\n      WHERE story_id = ?\n    `;\n    \n    const biasResult = await DB.prepare(biasQuery).bind(storyId).all<{\n      bias_classification: string;\n      article_count: number;\n    }>();\n\n    // Group articles by bias category\n    const articlesByBias: { [key: string]: Article[] } = {};\n    \n    if (articlesResult.results) {\n      for (const article of articlesResult.results) {\n        if (!articlesByBias[article.source_bias]) {\n          articlesByBias[article.source_bias] = [];\n        }\n        articlesByBias[article.source_bias].push(article);\n      }\n    }\n\n    return NextResponse.json({\n      story: storyResult,\n      articles: articlesResult.results || [],\n      articlesByBias,\n      bias_distribution: biasResult.results || []\n    });\n\n  } catch (error) {\n    console.error(\"Error fetching story articles:\", error);\n    const errorMessage = error instanceof Error ? error.message : \"An unknown error occurred\";\n    return NextResponse.json({ error: \"Failed to fetch story articles\", details: errorMessage }, { status: 500 });\n  }\n}\n","import { AppRouteRouteModule } from \"next/dist/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/server/lib/patch-fetch\";\nimport * as userland from \"/Users/mohamedkhalif/Documents/somanews/src/app/api/stories/[storyId]/route.ts\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"standalone\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/stories/[storyId]/route\",\n        pathname: \"/api/stories/[storyId]\",\n        filename: \"route\",\n        bundlePath: \"app/api/stories/[storyId]/route\"\n    },\n    resolvedPagePath: \"/Users/mohamedkhalif/Documents/somanews/src/app/api/stories/[storyId]/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\n\n//# sourceMappingURL=app-route.js.map","var _self___RSC_MANIFEST;\nimport { createServerModuleMap } from \"next/dist/server/app-render/action-utils\";\nimport { setReferenceManifestsSingleton } from \"next/dist/server/app-render/encryption-utils\";\nimport { EdgeRouteModuleWrapper } from \"next/dist/server/web/edge-route-module-wrapper\";\n// Import the userland code.\nimport * as module from \"next-app-loader?name=app%2Fapi%2Fstories%2F%5BstoryId%5D%2Froute&page=%2Fapi%2Fstories%2F%5BstoryId%5D%2Froute&pagePath=private-next-app-dir%2Fapi%2Fstories%2F%5BstoryId%5D%2Froute.ts&appDir=%2FUsers%2Fmohamedkhalif%2FDocuments%2Fsomanews%2Fsrc%2Fapp&appPaths=%2Fapi%2Fstories%2F%5BstoryId%5D%2Froute&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!private-next-app-dir/api/stories/[storyId]/route.ts?__next_edge_ssr_entry__\";\nconst nextConfig = {\"env\":{},\"webpack\":null,\"eslint\":{\"ignoreDuringBuilds\":true},\"typescript\":{\"ignoreBuildErrors\":true,\"tsconfigPath\":\"tsconfig.json\"},\"distDir\":\".next\",\"cleanDistDir\":true,\"assetPrefix\":\"\",\"cacheMaxMemorySize\":52428800,\"configOrigin\":\"next.config.ts\",\"useFileSystemPublicRoutes\":true,\"generateEtags\":true,\"pageExtensions\":[\"tsx\",\"ts\",\"jsx\",\"js\"],\"poweredByHeader\":true,\"compress\":true,\"images\":{\"deviceSizes\":[640,750,828,1080,1200,1920,2048,3840],\"imageSizes\":[16,32,48,64,96,128,256,384],\"path\":\"/_next/image\",\"loader\":\"default\",\"loaderFile\":\"\",\"domains\":[],\"disableStaticImages\":false,\"minimumCacheTTL\":60,\"formats\":[\"image/webp\"],\"dangerouslyAllowSVG\":false,\"contentSecurityPolicy\":\"script-src 'none'; frame-src 'none'; sandbox;\",\"contentDispositionType\":\"attachment\",\"remotePatterns\":[],\"unoptimized\":false},\"devIndicators\":{\"appIsrStatus\":true,\"buildActivity\":true,\"buildActivityPosition\":\"bottom-right\"},\"onDemandEntries\":{\"maxInactiveAge\":60000,\"pagesBufferLength\":5},\"amp\":{\"canonicalBase\":\"\"},\"basePath\":\"\",\"sassOptions\":{},\"trailingSlash\":false,\"i18n\":null,\"productionBrowserSourceMaps\":false,\"excludeDefaultMomentLocales\":true,\"serverRuntimeConfig\":{},\"publicRuntimeConfig\":{},\"reactProductionProfiling\":false,\"reactStrictMode\":null,\"reactMaxHeadersLength\":6000,\"httpAgentOptions\":{\"keepAlive\":true},\"logging\":{},\"expireTime\":31536000,\"staticPageGenerationTimeout\":60,\"output\":\"standalone\",\"modularizeImports\":{\"@mui/icons-material\":{\"transform\":\"@mui/icons-material/{{member}}\"},\"lodash\":{\"transform\":\"lodash/{{member}}\"}},\"outputFileTracingRoot\":\"/Users/mohamedkhalif/Documents/somanews\",\"experimental\":{\"cacheLife\":{\"default\":{\"stale\":300,\"revalidate\":900,\"expire\":4294967294},\"seconds\":{\"stale\":0,\"revalidate\":1,\"expire\":60},\"minutes\":{\"stale\":300,\"revalidate\":60,\"expire\":3600},\"hours\":{\"stale\":300,\"revalidate\":3600,\"expire\":86400},\"days\":{\"stale\":300,\"revalidate\":86400,\"expire\":604800},\"weeks\":{\"stale\":300,\"revalidate\":604800,\"expire\":2592000},\"max\":{\"stale\":300,\"revalidate\":2592000,\"expire\":4294967294}},\"cacheHandlers\":{},\"cssChunking\":true,\"multiZoneDraftMode\":false,\"appNavFailHandling\":false,\"prerenderEarlyExit\":true,\"serverMinification\":true,\"serverSourceMaps\":false,\"linkNoTouchStart\":false,\"caseSensitiveRoutes\":false,\"clientSegmentCache\":false,\"preloadEntriesOnStart\":true,\"clientRouterFilter\":true,\"clientRouterFilterRedirects\":false,\"fetchCacheKeyPrefix\":\"\",\"middlewarePrefetch\":\"flexible\",\"optimisticClientCache\":true,\"manualClientBasePath\":false,\"cpus\":7,\"memoryBasedWorkersCount\":false,\"imgOptConcurrency\":null,\"imgOptTimeoutInSeconds\":7,\"imgOptMaxInputPixels\":268402689,\"imgOptSequentialRead\":null,\"isrFlushToDisk\":true,\"workerThreads\":false,\"optimizeCss\":false,\"nextScriptWorkers\":false,\"scrollRestoration\":false,\"externalDir\":false,\"disableOptimizedLoading\":false,\"gzipSize\":true,\"craCompat\":false,\"esmExternals\":true,\"fullySpecified\":false,\"swcTraceProfiling\":false,\"forceSwcTransforms\":false,\"largePageDataBytes\":128000,\"turbo\":{\"root\":\"/Users/mohamedkhalif/Documents/somanews\"},\"typedRoutes\":false,\"typedEnv\":false,\"parallelServerCompiles\":false,\"parallelServerBuildTraces\":false,\"ppr\":false,\"authInterrupts\":false,\"reactOwnerStack\":false,\"webpackMemoryOptimizations\":false,\"optimizeServerReact\":true,\"useEarlyImport\":false,\"staleTimes\":{\"dynamic\":0,\"static\":300},\"serverComponentsHmrCache\":true,\"staticGenerationMaxConcurrency\":8,\"staticGenerationMinPagesPerWorker\":25,\"dynamicIO\":false,\"inlineCss\":false,\"optimizePackageImports\":[\"lucide-react\",\"date-fns\",\"lodash-es\",\"ramda\",\"antd\",\"react-bootstrap\",\"ahooks\",\"@ant-design/icons\",\"@headlessui/react\",\"@headlessui-float/react\",\"@heroicons/react/20/solid\",\"@heroicons/react/24/solid\",\"@heroicons/react/24/outline\",\"@visx/visx\",\"@tremor/react\",\"rxjs\",\"@mui/material\",\"@mui/icons-material\",\"recharts\",\"react-use\",\"effect\",\"@effect/schema\",\"@effect/platform\",\"@effect/platform-node\",\"@effect/platform-browser\",\"@effect/platform-bun\",\"@effect/sql\",\"@effect/sql-mssql\",\"@effect/sql-mysql2\",\"@effect/sql-pg\",\"@effect/sql-squlite-node\",\"@effect/sql-squlite-bun\",\"@effect/sql-squlite-wasm\",\"@effect/sql-squlite-react-native\",\"@effect/rpc\",\"@effect/rpc-http\",\"@effect/typeclass\",\"@effect/experimental\",\"@effect/opentelemetry\",\"@material-ui/core\",\"@material-ui/icons\",\"@tabler/icons-react\",\"mui-core\",\"react-icons/ai\",\"react-icons/bi\",\"react-icons/bs\",\"react-icons/cg\",\"react-icons/ci\",\"react-icons/di\",\"react-icons/fa\",\"react-icons/fa6\",\"react-icons/fc\",\"react-icons/fi\",\"react-icons/gi\",\"react-icons/go\",\"react-icons/gr\",\"react-icons/hi\",\"react-icons/hi2\",\"react-icons/im\",\"react-icons/io\",\"react-icons/io5\",\"react-icons/lia\",\"react-icons/lib\",\"react-icons/lu\",\"react-icons/md\",\"react-icons/pi\",\"react-icons/ri\",\"react-icons/rx\",\"react-icons/si\",\"react-icons/sl\",\"react-icons/tb\",\"react-icons/tfi\",\"react-icons/ti\",\"react-icons/vsc\",\"react-icons/wi\"]},\"bundlePagesRouterDependencies\":false,\"configFile\":\"/Users/mohamedkhalif/Documents/somanews/next.config.ts\",\"configFileName\":\"next.config.ts\"}\nconst maybeJSONParse = (str)=>str ? JSON.parse(str) : undefined;\nconst rscManifest = (_self___RSC_MANIFEST = self.__RSC_MANIFEST) == null ? void 0 : _self___RSC_MANIFEST[\"/api/stories/[storyId]/route\"];\nconst rscServerManifest = maybeJSONParse(self.__RSC_SERVER_MANIFEST);\nif (rscManifest && rscServerManifest) {\n    setReferenceManifestsSingleton({\n        page: \"/api/stories/[storyId]/route\",\n        clientReferenceManifest: rscManifest,\n        serverActionsManifest: rscServerManifest,\n        serverModuleMap: createServerModuleMap({\n            serverActionsManifest: rscServerManifest\n        })\n    });\n}\nexport const ComponentMod = module;\nexport default EdgeRouteModuleWrapper.wrap(module.routeModule, {\n    nextConfig\n});\n\n//# sourceMappingURL=edge-app-route.js.map"],"names":["runtime","GET","request","params","storyId","parseInt","isNaN","NextResponse","json","error","status","DB","getRequestContext","env","storyQuery","storyResult","prepare","bind","first","articlesQuery","articlesResult","all","biasQuery","biasResult","articlesByBias","results","article","source_bias","push","story","articles","bias_distribution","console","errorMessage","Error","message","details"],"sourceRoot":"","ignoreList":[]}